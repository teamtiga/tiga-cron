# This is a GitHub Actions workflow file.
# It defines a scheduled job (cron job) to call an API.
# Save this file in your repository at the path: .github/workflows/api_cron.yml

name: Call Test API on Schedule

on:
  # This section defines when the workflow will run.
  schedule:
    # Runs every 15 minutes. You can change this using cron syntax.
    # For example, '0 * * * *' runs at the beginning of every hour.
    - cron: '*/15 * * * *'
  
  # This line allows you to run the workflow manually from the Actions tab
  # on your GitHub repository, which is great for testing.
  workflow_dispatch:

jobs:
  # A workflow run is made up of one or more jobs that can run sequentially or in parallel.
  call-api:
    # The type of runner that the job will run on. 'ubuntu-latest' is a common choice.
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job.
    steps:
      # Step 1: Check out your repository's code. This is often needed for context.
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Make the API call using curl.
      - name: Call the test API
        # We use the 'run' keyword to execute command-line programs.
        # The API_SECRET_KEY is securely accessed from your repository's secrets.
        run: |
          echo "Sending request to the test API..."
          response=$(curl --write-out '%{http_code}' --silent --output /dev/null -X POST \
            -H "Content-Type: application/json" \
            -d '{"secret_key": "${{ secrets.API_SECRET_KEY }}"}' \
            https://mp6a3415278cc4a15e2e.free.beeceptor.com/test)
          
          echo "API responded with status code: $response"

          if [ "$response" -eq 200 ]; then
            echo "API call successful!"
          else
            echo "API call failed with status code $response"
            exit 1
          fi
